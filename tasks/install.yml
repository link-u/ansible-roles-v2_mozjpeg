---
# tasks/install.yml (mozjpeg)
# Prefix : mozjpeg

- name: Check mozjpeg is installed
  stat:
    path: "{{ mozjpeg_prefix }}/bin/cjpeg"
  register: mozjpeg_cmd

- block:
    - name: Install build tools
      apt:
        name: ["autoconf", "automake", "make", "libtool", "nasm", "pkg-config"]
        update_cache: yes

    - name: Clean up tmp directory for source code
      file:
        path: "/tmp/src_mozjpeg"
        state: absent

    - name: Create tmp directory for source code
      file:
        path: "/tmp/src_mozjpeg"
        state: directory
        owner: "root"
        group: "root"
        mode: "0755"

    - name: Download source code
      unarchive:
        src: "{{ mozjpeg_download_url }}"
        dest: "/tmp/src_mozjpeg"
        owner: "root"
        group: "root"
        mode: "0755"
        remote_src: true

    - name: configure and make uninstall
      command: "{{ item }}"
      args:
        chdir: "/tmp/src_mozjpeg/mozjpeg-{{ mozjpeg_version }}"
      loop:
        - "autoreconf -fiv"
        - "./configure --prefix={{ mozjpeg_prefix }}"
        - "make uninstall"

    - name: Remove tmp directory for source code
      file:
        path: "/tmp/src_mozjpeg"
        state: absent
  when:
    - mozjpeg_cmd.stat.exists | bool
    - (not mozjpeg_cmd.stat.islnk) | bool

- name: Pre-install packages
  apt:
    name: "gpg"
    state: present
    update_cache: yes

- name: Trust our package maintainers.
  apt_key:
    id: 4DE76DC836A27DBAE17FAC4B09C9B9C18F429AAE
    url: https://pkg.link-u.co.jp/key.asc
    state: present

- name: Add our apt repository.
  apt_repository:
    repo: deb https://pkg.link-u.co.jp/{{ ansible_distribution_release }} ./
    state: present

- name: Install packages
  apt:
    name: "mozjpeg"
    update_cache: yes

- name: Create a symbolic link
  file:
    src: "/usr/bin/{{ item }}"
    dest: "{{ mozjpeg_prefix }}/bin/{{ item }}"
    owner: root
    group: root
    state: link
  loop: ["cjpeg", "djpeg", "jpegtran", "rdjpgcom", "tjbench", "wrjpgcom"]
